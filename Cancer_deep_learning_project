import numpy as np 
import pandas as pd 
import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))
data = pd.read_csv("/kaggle/input/breast-cancer-wisconsin-data/data.csv")
data.head(20)
data.isna().sum()
data.duplicated().sum()
print(data["diagnosis"].unique())
data["diagnosis"] = data["diagnosis"].map({"M" : 1, "B": 0})
data.head(20)
data = data.drop(columns = ["Unnamed: 32"])
data.head()
data.corr()["diagnosis"].sort_values(ascending  = False)
x = data[["concave points_worst",
"perimeter_worst", "concave points_mean", "radius_worst", "perimeter_mean",
"area_worst",
"radius_mean",
"area_mean",
"concavity_mean",
"concavity_worst",
"compactness_mean",
"compactness_worst",
"radius_se",                  
"perimeter_se",          
"area_se"]]
y = data["diagnosis"]

x.shape
y.shape
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.3)
x_train.shape
y_train.shape
import tensorflow as tf
from tensorflow import keras
model = keras.Sequential([
                          keras.layers.Flatten(input_shape=(15,)),
                          keras.layers.Dense(20, activation='relu'),
                          keras.layers.Dense(20, activation='relu'),
                          keras.layers.Dense(2, activation='sigmoid')
])
from sklearn.metrics import accuracy_score
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])
history = model.fit(x_train, y_train, validation_split=0.1, epochs=10)
y_pred = model.predict(x_test)
print(y_pred.shape)
y_pred
history_df = pd.DataFrame(history.history)
history_df["loss"].plot()
y_pred_labels = [np.argmax(i) for i in y_pred]
def performance(predictions):
    acc = accuracy_score(y_test,predictions)
    print(f"The accuracy is {acc}")
performance(y_pred_labels)
